plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("com.google.dagger.hilt.android")
    id 'kotlinx-serialization'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'com.example.unittest'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.unittest"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.example.unittest.HiltTestRunner"
        buildConfigField("String", "API_KEY", properties["API_KEY"])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    buildFeatures{
        viewBinding true
        dataBinding true
        buildConfig true
    }
}

dependencies {

//코루틴
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.2")

//힐트
    implementation("com.google.dagger:hilt-android:2.45")
    kapt("com.google.dagger:hilt-android-compiler:2.45")

//레트로핏
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation("com.squareup.okhttp3:okhttp:4.11.0")

//Serialization
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0'

//룸
    implementation("androidx.room:room-runtime:2.5.2")
    annotationProcessor("androidx.room:room-compiler:2.5.2")
    implementation("androidx.room:room-ktx:2.5.2")
    kapt("androidx.room:room-compiler:2.5.2")

//글라이드
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    annotationProcessor'com.github.bumptech.glide:compiler:4.15.1'

//by viewModels()
    implementation "androidx.activity:activity-ktx:1.7.2"
    implementation("androidx.fragment:fragment-ktx:1.6.1")

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'



    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "org.assertj:assertj-core:3.22.0"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation("com.google.dagger:hilt-android-testing:2.44")
    kaptTest("com.google.dagger:hilt-android-compiler:2.44")


    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.44")
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.44")
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestUtil "androidx.test:orchestrator:1.3.0"

    debugImplementation 'androidx.fragment:fragment-testing:1.6.1'
}
kapt {
    correctErrorTypes = true
}